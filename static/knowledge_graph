// Knowledge Graph
digraph {
	1 [label="High Performance Software Applications (Concept)"]
	2 [label="Performance Requirements (Concept)"]
	3 [label="Performance Models (Concept)"]
	4 [label="Performance Improvement Tactics (Concept)"]
	5 [label="Common Problems and Pitfalls (Concept)"]
	6 [label="Performance Considerations (Concept)"]
	7 [label="Requirements Capture (Process)"]
	8 [label="Architecture Definition (Process)"]
	9 [label="Reusability (Attribute)"]
	10 [label="Scalability (Attribute)"]
	11 [label="Performance Engineering in Software Development (Resource)"]
	12 [label="Scalability and Performance in Software Architecture (Resource)"]
	1 -> 2 [label=Has]
	2 -> 3 [label="Analyzed to create"]
	1 -> 4 [label="Can use"]
	1 -> 5 [label="Can have"]
	1 -> 6 [label="Should consider"]
	1 -> 7 [label=Requires]
	1 -> 8 [label=Requires]
	1 -> 9 [label="Benefits from"]
	1 -> 10 [label=Needs]
	1 -> 11 [label="Related Resource"]
	1 -> 12 [label="Related Resource"]
}
